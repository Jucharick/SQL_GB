USE gb_db;

-- Транзакция — это набор последовательных операций с базой данных, соединенных в
-- одну логическую единицу.
-- Транзакцией называется атомарная группа запросов SQL, т. е. запросы, которые
-- рассматриваются как единое целое. Если база данных может выполнить всю группу
-- запросов, она делает это, но если любой из них не может быть выполнен в результате
-- Курс базы данных и SQL. Лекция 6 2
-- сбоя или по какой-то другой причине, не будет выполнен ни один запрос группы. Все
-- или ничего.

-- Изоляция — это свойство транзакции, которое позволяет скрывать изменения,
-- внесенные одной операцией транзакции при возникновении явления race condition

-- Процедура - это подпрограмма (например, подпрограмма) на обычном языке
-- сценариев, хранящаяся в базе данных.

-- ACID - это набор из четырех требований к транзакционной системе, обеспечивающих
-- максимально надежную и предсказуемую работу.

DROP TABLE IF EXISTS accounts;

CREATE TABLE accounts (
id INT PRIMARY KEY AUTO_INCREMENT,
user_id INT,
total DECIMAL (11,2) COMMENT 'Счет',
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) COMMENT = 'Счета пользователей и интернет магазина';

INSERT INTO accounts (user_id, total)
VALUES
(4, 5000.00),
(3, 0.00),
(2, 200.00),
(NULL, 25000.00);

SELECT * FROM accounts;

START TRANSACTION;
-- Далее выполняем команды, входящие в транзакцию:
SELECT total FROM accounts WHERE user_id = 4;
-- Убеждаемся, что на счету пользователя достаточно средств:
UPDATE accounts SET total = total - 2000 WHERE user_id = 4;
-- Снимаем средства со счета пользователя:
UPDATE accounts SET total = total + 2000 WHERE user_id IS NULL;
-- Чтобы изменения вступили в
-- силу, мы должны выполнить команду COMMIT
COMMIT;
-- cкрипт выполнять полностью: начиная от первой и до самой последней строчки

SELECT * FROM accounts;
-- Если команда проходит без ошибок, изменения фиксируются базой данных 











